library(readxl)
diabetes <- read_excel("diabetes.xlsx")
View(diabetes)
library(tidyverse)
str(diabetes)
colnames(diabetes)
# What is the structure of the dataset? How many rows and column?
str(diabetes)
colnames(diabetes)
variable <- colnames(diabetes)
variables <- colnames(diabetes)
variables
# summary statistic on the Age variable
summarise(diabetes$Age)
# summary statistic on the Age variable
summarize(diabetes$Age)
# summary statistic on the Age variable
describe(diabetes$Age)
library(dplyr)
# summary statistic on the Age variable
describe(diabetes$Age)
# summary statistic on the Age variable
sum(diabetes$Age)
# summary statistic on the Age variable
summary(diabetes$Age)
# mode of Age
mode_age <- diabetes |>
count(Age, n = sum(n))
# mode of Age
mode_age <- diabetes |>
count(Age, sort = TRUE)
mode_age
# mode of Age
mode_age <- diabetes |>
count(Age, sort = TRUE) |>
ggplot(mode_age) +
geom_bar()
ggplot(aes(mode_age) +
mode_age
# summary statistic on the Age variable
summary(diabetes$Age)
# summary statistic on the Age variable
summary(diabetes$Age)
# mode of Age
mode_age <- diabetes |>
count(Age, sort = TRUE)
mode_age
# Histogram for age
ggplot(diabetes,aes(Age)) +
geom_histogram()
# Histogram for age
ggplot(diabetes,aes(Age)) +
geom_histogram() +
labs(
title = "Age Distribution",
x = "Ages",
y = "Frequency"
)
# Histogram for age
ggplot(diabetes,aes(Age)) +
geom_histogram(bins = 20) +
labs(
title = "Age Distribution",
x = "Ages",
y = "Frequency"
)
# Histogram for age
ggplot(diabetes,aes(Age)) +
geom_histogram(bins = 30) +
labs(
title = "Age Distribution",
x = "Ages",
y = "Frequency"
)
diabetes <- diabetes |>
mutate(
gender = "Female" if sex == 1, else "Male"
diabetes <- diabetes |>
mutate(
gender = if_else(Sex == 1, "Male", "Female")
)
diabetes
diabetes <- diabetes |>
mutate(
gender = if_else(Sex == 1, "Female", "Male")
)
diabetes
diabetes |>
ggplot(aes(gender)) +
geom_bar()
diabetes |>
ggplot(aes(gender)) +
geom_bar()
diabetes |>
ggplot(aes(gender)) +
geom_bar(fill = gender)
diabetes |>
ggplot(aes(gender)) +
geom_bar(fill = "gender")
diabetes |>
ggplot(aes(gender)) +
geom_bar(fill = 'gender')
diabetes |>
ggplot(aes(gender)) +
geom_bar()
diabetes |>
ggplot(aes(gender)) +
geom_bar(fill = 'gender')
diabetes |>
ggplot(aes(gender)) +
geom_bar()
diabetes |>
ggplot(aes(gender)) +
geom_bar +
coord_polar(theta = "gender") +
theme_void() +
labs(title = "Pie Chart with ggplot2") +
theme(legend.title = element_blank())
diabetes |>
ggplot(aes(gender)) +
geom_bar() +
coord_polar(theta = "gender") +
theme_void() +
labs(title = "Pie Chart with ggplot2") +
theme(legend.title = element_blank())
diabetes |>
ggplot(aes(gender)) +
geom_bar()
#box plot for age and sex
diabetes |>
ggplot(aes(Age, gender)) +
geom_point()
#replacing logical data of Sex with 2 categorical "Male" and "Female"
diabetes <- diabetes |>
mutate(
gender = if_else(Sex == 1, "Female", "Male")
)
#visualization sex with bar plot
diabetes |>
ggplot(aes(gender)) +
geom_bar()
# How many male and female in this study
diabetes |>
count(gender, sort = TRUE)
# How many male and female in this study?
diabetes |>
count(gender, sort = TRUE)
glimpes(diabetes)
glimps(diabetes)
#adding a new variable for residence
diabetes
#adding a new variable for residence
diabetes |>
mutate(
residence = if_else(Residence == 1, "Rural", "Urban")
)
diabetes
#adding a new variable for residence
diabetes |>
mutate(
residence = if_else(Residence == 1, "Rural", "Urban")
)
diabetes
#adding a new variable for residence
diabetes1 |>
mutate(
residence = if_else(Residence == 1, "Rural", "Urban")
)
#adding a new variable for residence
diabetes <- diabetes |>
mutate(
residence = if_else(Residence == 1, "Rural", "Urban")
)
diabetes
diabetes
diabetes |>
ggplot(aes(residence)) +
geom_bar()
diabetes |>
ggplot(aes(residence)) +
geom_bar() +
labs( title = "Residence",
x = "Residence", y = "Frequency")
diabetes |>
ggplot(aes(residence)) +
geom_bar() +
labs( title = "Residence of study respondents",
x = "Residence", y = "Frequency")
# adding a new categorical variable for religion
diabetes <- diabetes |>
mutate(
religion = case_when(
Relion = 1 ~ "Christian",
Relion = 2 ~ "Muslim",
Religion = 3 ~ "Tradition"
)
)
# adding a new categorical variable for religion
diabetes <- diabetes |>
mutate(
religion = case_when(
Relion == 1 ~ "Christian",
Relion == 2 ~ "Muslim",
Religion == 3 ~ "Tradition"
)
)
# adding a new categorical variable for religion
diabetes <- diabetes |>
mutate(
religion = case_when(
Religion == 1 ~ "Christian",
Religion == 2 ~ "Muslim",
Religion == 3 ~ "Tradition"
)
)
diabetes
diabetes
diabetes
diabetes |>
select(Religion, religion)
ggplot(diabetes, aes(religion)) +
geom_bar(fill("religion"))
ggplot(diabetes, aes(religion)) +
geom_bar()
ggplot(diabetes, aes(religion)) +
geom_bar(sort = TRUE))
ggplot(diabetes, aes(religion)) +
geom_bar()
ggplot(diabetes, aes(religion)) +
geom_bar() +
labs(
title = "Religion of Study participants",
x = "Religious group",
y = "Frequency"
)
diabetes |>
count(religion, sort = TRUE)
diabetes |>
count(religion,n = sum(n), sort = TRUE)
diabetes |>
count(religion, sort = TRUE)
diabetes |>
count(religion, sort = TRUE) |>
geom_bar()
diabetes |>
count(religion, sort = TRUE) |>
ggplot() +
geom_bar()
diabetes |>
count(religion, sort = TRUE) |>
ggplot(aes(religion)) +
geom_bar()
diabetes |>
count(religion, sort = TRUE)
ggplot(diabetes, aes(religion)) +
geom_bar() +
labs(
title = "Religion of Study participants",
x = "Religious group",
y = "Frequency"
)
ggplot(diabetes, aes(religion), sort = TRUE) +
geom_bar() +
labs(
title = "Religion of Study participants",
x = "Religious group",
y = "Frequency"
)
ggplot(diabetes, aes(religion)) +
geom_bar() +
labs(
title = "Religion of Study participants",
x = "Religious group",
y = "Frequency"
)
#categorical variable for alcohol intake
diabetes <- diabetes |>
mutate(
alcohol = if_else(Alcohol_Intake == 1, "Yes", "No"),
obese = if_else(Obesity == 1, "Yes", "No")
)
#categorical variable for alcohol intake, obesity, and BMI
diabetes <- diabetes |>
mutate(
alcohol = if_else(Alcohol_Intake == 1, "Yes", "No"),
obese = if_else(Obesity == 1, "Yes", "No"),
bmi = case_when(
BMI < 18.5 ~ "undwerweight",
BMI > 18.5 & BMI < 24.9 ~ "healthy_weigt"
)
)
#categorical variable for alcohol intake, obesity, and BMI
diabetes <- diabetes |>
mutate(
alcohol = if_else(Alcohol_Intake == 1, "Yes", "No"),
obese = if_else(Obesity == 1, "Yes", "No"),
bmi = case_when(
BMI < 18.5 ~ "undwerweight",
BMI >= 18.5 & BMI <= 24.9 ~ "healthy_weight",
BMI >= 25 & BMI <= 29.9
)
)
#categorical variable for alcohol intake, obesity, and BMI
diabetes <- diabetes |>
mutate(
alcohol = if_else(Alcohol_Intake == 1, "Yes", "No"),
obese = if_else(Obesity == 1, "Yes", "No"),
bmi = case_when(
BMI < 18.5 ~ "undwerweight",
BMI >= 18.5 & BMI <= 24.9 ~ "healthy_weight",
BMI >= 25 & BMI <= 29.9 ~ "overweight"
)
)
#categorical variable for alcohol intake, obesity, and BMI
diabetes <- diabetes |>
mutate(
alcohol = if_else(Alcohol_Intake == 1, "Yes", "No"),
obese = if_else(Obesity == 1, "Yes", "No"),
bmi = case_when(
BMI < 18.5 ~ "undwerweight",
BMI >= 18.5 & BMI <= 24.9 ~ "healthy_weight",
BMI >= 25 & BMI <= 29.9 ~ "overweight",
BMI >= 30 & BMI <= 39.9 ~ "obese",
BMI >= 40 ~ "severely_obese"
)
)
diabetes |>
count(obese, sort = TRUE)
diabetes |>
count(bmi, sort = TRUE)
diabetes |>
select(BMI, bmi)
diabetes |>
filter(bmi < 18.5)
diabetes |>
filter(bmi == 18.5)
diabetes |>
filter( bmi < 18)
diabetes |>
filter(BMI < 18.5)
diabetes |>
selec(BMI : bmi),
diabetes |>
selec(BMI : bmi)
diabetes |>
select(BMI : bmi)
filter(BMI < 18.5, sort = TRUE)
filter(BMI < 18.5, order(BMI))
filter(BMI < 18.5)
diabetes |>
select(BMI : bmi)
filter(BMI < 18.5)
diabetes |>
select(BMI : bmi) |>
filter(BMI < 18.5)
diabetes |>
count(bmi, sort = TRUE)
head(diabetes)
diabetes |>
head(BMI:bmi)
diabetes |>
head(BMI : bmi)
diabetes |>
select (head(BMI : bmi))
diabetes |>
select(BMI : bmi) |>
filter(BMI < 18.5)
View(diabetes)
# categorizing FGB into diabetes status
diabetes <- diabetes |>
mutate(
diabetes_status = if_else(FBG >= 3.9 & FBG <= 5.6, "Normal", "Abnormal")
)
library(readxl)
library(tidyverse)
library(dplyr)
# categorizing FGB into diabetes status
diabetes <- diabetes |>
mutate(
diabetes_status = if_else(FBG >= 3.9 & FBG <= 5.6, "Normal", "Abnormal")
)
diabetes |>
select(FBG, diabetes_status)
diabetes |>
select(FBG, diabetes_status, sort = TRUE)
diabetes |>
select(FBG, diabetes_status)
ggplot(diabetes, aes(diabetes_status)) +
geom_bar()
diabetes |>
count(diabetes_status, sort = TRUE)
# scatter plot of age and gender
ggplot(diabetes, aes(gender, Age)) +
geom_point()
# scatter plot of age and gender
ggplot(diabetes, aes(gender, Age)) +
geom_boxplot()
# presenting age distribution on a histogram
ggplot(diabetes, aes(Age)) +
geom_histogram()
# presenting age distribution on a histogram
ggplot(diabetes, aes(Age)) +
geom_histogram() +
labs(
title = "Age distribution survey partcipants",
subtitle = "Median age for the distribution is around 50 years",
x = "Ages",
y = "Frequency"
)
# scatter plot for age and BMI to check
ggplot(diabetes, aes(BMI,Age)) +
geom_point()
# scatter plot for age and BMI to check
ggplot(diabetes, aes(Age,BMI)) +
geom_point()
# scatter plot for age and BMI to check
ggplot(diabetes, aes(Age,BMI)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# running correlation for age and BMI
cor(diabetes$Age, diabetes$BMI)
# BMI distribution on histogram
ggplot(diabetes, aes(BMI)) +
geom_histogram()
# BMI distribution on histogram
ggplot(diabetes, aes(BMI)) +
geom_histogram(bins = 20)
ggplot(diabetes, aes(BMI)) +
geom_density(bins = 20)
ggplot(diabetes, aes(BMI)) +
geom_density()
# BMI distribution on histogram
ggplot(diabetes, aes(BMI)) +
geom_histogram(bins = 20) +
geom_density()
summary(diabetes$BMI)
summary(diabetes$Age)
# 2 cat var
ggplot(diabetes, aes(x = gender, y = religion)) +
geom_count()
diabetes |>
count(gender, bmi) |>
ggplot(aes(x = gender, y = bmi)) +
geom_tile(aes(fill = n))
# bmi
ggplot(diabetes, aes(bmi)) +
geom_bar()
ggplot(diabetes, aes(x = fct_infreq(bmi)) +
diabetes |>
count(gender, bmi) |>
ggplot(aes(x = gender, y = bmi)) +
geom_tile(aes(fill = n))
# 2 cat var
ggplot(diabetes, aes(x = gender, y = religion)) +
ggplot(diabetes, aes(x = fct_infreq(bmi))) +
geom_bar()
ggplot(diabetes, aes(x = fct_inorder(bmi))) +
geom_bar()
ggplot(diabetes, aes(fct_infreq(bmi))) +
geom_bar()
#
ggplot(diabetes, aes(x = bmi, color = gender)) +
geom_density(linewidth = 0.75)
#
ggplot(diabetes, aes(x = diabetes_status, color = gender)) +
geom_density(linewidth = 0.75)
#
ggplot(diabetes, aes(x = bmi, color = gender)) +
geom_density(linewidth = 0.75)
ggplot(diabetes, aes(x = bmi, fill = gender)) +
geom_bar()
ggplot(diabetes, aes(x = bmi, fill = gender)) +
geom_bar(position = fill())
ggplot(diabetes, aes(x = bmi, fill = gender)) +
geom_bar(position = fill())
ggplot(diabetes, aes(x = bmi, fill = gender)) +
geom_bar(position = fill)
ggplot(diabetes, aes(x = bmi, fill = gender)) +
geom_bar(position = "fill")
install.packages("summarytools")
library(summarytools)
install.packages("summarytools")
library(summarytools)
dfSummary(diabetes)
dfSummary(diabetes$Age)
dfSummary(diabetes$religion)
freq(diabetes$gender)
# Cross-tabulation
ctable(diabetes$gender, diabetes$diabetes_status)
install.packages("gtsummary")
install.packages("gtsummary")
library(gtsummary)
diabetes |>
select(gender, Age, diabetes_status) |>
tbl_summary(by = gender)
diabetes |>
select(gender, Age, diabetes_status) |>
tbl_summary(by = religion)
diabetes |>
select(gender, Age, religion) |>
tbl_summary(by = religion)
install.packages("tableone")
library(tableone)
CreateTableOne(vars = c("Age", "BMI"), strata = "gender", data = diabetes)
